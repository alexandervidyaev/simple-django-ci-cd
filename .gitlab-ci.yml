stages:
  - build
  - push
  - test
  - deploy


variables:
  NAME: web
  WEBSERVER: nginx
  GIT_STRATEGY: clone 

Build container:
  stage: build
  tags:
    - docker-runner
  image: docker:20.10.18
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY/$GITLAB_USER_LOGIN/$CI_PROJECT_NAME/$NAME:$CI_COMMIT_SHORT_SHA .
    - docker build -t $CI_REGISTRY/$GITLAB_USER_LOGIN/$CI_PROJECT_NAME/$WEBSERVER:$CI_COMMIT_SHORT_SHA ./nginx
    
Push to registry:
  stage: push
  tags:
    - docker-runner
  image: docker:20.10.18
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:    
    - docker push $CI_REGISTRY/$GITLAB_USER_LOGIN/$CI_PROJECT_NAME/$NAME:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY/$GITLAB_USER_LOGIN/$CI_PROJECT_NAME/$WEBSERVER:$CI_COMMIT_SHORT_SHA

Test:
  stage: test
  tags:
    - shell-runner
  script:
    - docker-compose -f docker-compose.yml -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from test

Deploy to server:
  stage: deploy
  image: 
    name: docker/compose:1.29.2
    entrypoint: [""]
  variables:
    DOCKER_HOST: tcp://10.7.160.19:2376
    DOCKER_DRIVER: overlay2
  script:
    - docker-compose -f docker-compose.yml up -d
